// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantsDAB;

namespace RestaurantsDAB.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    [Migration("20191110121016_ResturuntSeeding")]
    partial class ResturuntSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestaurantsDAB.Models.Dish", b =>
                {
                    b.Property<string>("DishId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ReviewId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DishId");

                    b.HasIndex("ReviewId");

                    b.ToTable("dishes");

                    b.HasData(
                        new
                        {
                            DishId = "1334",
                            DishName = "Cheese Burger",
                            Price = 9.9499999999999993,
                            Type = "Coin Offer"
                        },
                        new
                        {
                            DishId = "1335",
                            DishName = "Happy Meal",
                            Price = 36.950000000000003,
                            Type = "Børne Menu"
                        },
                        new
                        {
                            DishId = "1336",
                            DishName = "Whopper",
                            Price = 14.949999999999999,
                            Type = "Langsom burger"
                        },
                        new
                        {
                            DishId = "1337",
                            DishName = "Double-Whopper",
                            Price = 29.949999999999999,
                            Type = "Lidt hurtigere burger"
                        });
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Guest", b =>
                {
                    b.Property<string>("GuestId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReviewsReviewId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("GuestId");

                    b.HasIndex("ReviewsReviewId");

                    b.ToTable("guests");

                    b.HasData(
                        new
                        {
                            GuestId = "417",
                            Time = new DateTime(2019, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GuestId = "418",
                            Time = new DateTime(2019, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GuestId = "419",
                            Time = new DateTime(2019, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GuestId = "420",
                            Time = new DateTime(2019, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Person", b =>
                {
                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GuestID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaiterID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PersonId");

                    b.HasIndex("GuestID")
                        .IsUnique()
                        .HasFilter("[GuestID] IS NOT NULL");

                    b.HasIndex("WaiterID")
                        .IsUnique()
                        .HasFilter("[WaiterID] IS NOT NULL");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            PersonId = "61",
                            Name = "Jeps Jepsemand"
                        },
                        new
                        {
                            PersonId = "62",
                            Name = "Jobs Jobsemand"
                        },
                        new
                        {
                            PersonId = "63",
                            Name = "Flobs Flobsemand"
                        },
                        new
                        {
                            PersonId = "64",
                            Name = "Muubs Megetsyg"
                        },
                        new
                        {
                            PersonId = "65",
                            Name = "Blobs Blobbermand"
                        },
                        new
                        {
                            PersonId = "67",
                            Name = "Djebs Djakketyv"
                        },
                        new
                        {
                            PersonId = "68",
                            Name = "Henrik DABsemand"
                        },
                        new
                        {
                            PersonId = "69",
                            Name = "Jørgen Ingenarm"
                        });
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Relationship.GuestDish", b =>
                {
                    b.Property<string>("GuestId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DishId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GuestId", "DishId");

                    b.HasIndex("DishId");

                    b.ToTable("GuestDish");
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Relationship.RestaurantDish", b =>
                {
                    b.Property<string>("DishId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RestaurantId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DishId", "RestaurantId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestaurantDish");
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Relationship.WaiterTable", b =>
                {
                    b.Property<string>("WaiterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TableId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("WaiterId", "TableId");

                    b.HasIndex("TableId");

                    b.ToTable("WaiterTable");
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Restaurant", b =>
                {
                    b.Property<string>("RestaurantID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantID");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            RestaurantID = "MC1",
                            Address = "Ronald McDonald Street 6969",
                            Name = "McDonalds",
                            Type = "Hurtig-Mad"
                        },
                        new
                        {
                            RestaurantID = "BK1",
                            Address = "Sunset Boulevard 420",
                            Name = "Burger King",
                            Type = "Sund Hurtig-Mad"
                        });
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Review", b =>
                {
                    b.Property<string>("ReviewId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RestaurantID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReviewId");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = "R01",
                            Stars = 1,
                            Text = "Jeg hader Hurtig-mad. Det var ikke hurtigt nok"
                        },
                        new
                        {
                            ReviewId = "R02",
                            Stars = 3,
                            Text = "Jeg kan godt lide Hurtig-mad. Det kunne dog have været hurtigere"
                        },
                        new
                        {
                            ReviewId = "R03",
                            Stars = 5,
                            Text = "Jeg elsker Hurtig-mad. Det var bare lyn-hurtigt! :)"
                        });
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Table", b =>
                {
                    b.Property<string>("TableId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GuestId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TableId");

                    b.HasIndex("GuestId");

                    b.HasIndex("RestaurantID");

                    b.ToTable("tables");

                    b.HasData(
                        new
                        {
                            TableId = "6001",
                            Number = 10
                        },
                        new
                        {
                            TableId = "6002",
                            Number = 20
                        },
                        new
                        {
                            TableId = "6003",
                            Number = 30
                        },
                        new
                        {
                            TableId = "6004",
                            Number = 40
                        });
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Waiter", b =>
                {
                    b.Property<string>("WaiterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("WaiterId");

                    b.ToTable("waiters");

                    b.HasData(
                        new
                        {
                            WaiterId = "8005",
                            Salary = 2500.0
                        },
                        new
                        {
                            WaiterId = "8006",
                            Salary = 2600.0
                        },
                        new
                        {
                            WaiterId = "8007",
                            Salary = 2700.0
                        },
                        new
                        {
                            WaiterId = "8008",
                            Salary = 2800.0
                        });
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Dish", b =>
                {
                    b.HasOne("RestaurantsDAB.Models.Review", "Review")
                        .WithMany("Dishes")
                        .HasForeignKey("ReviewId");
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Guest", b =>
                {
                    b.HasOne("RestaurantsDAB.Models.Review", "Reviews")
                        .WithMany("Guests")
                        .HasForeignKey("ReviewsReviewId");
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Person", b =>
                {
                    b.HasOne("RestaurantsDAB.Models.Guest", "Guest")
                        .WithOne("Person")
                        .HasForeignKey("RestaurantsDAB.Models.Person", "GuestID");

                    b.HasOne("RestaurantsDAB.Models.Waiter", "Waiter")
                        .WithOne("Person")
                        .HasForeignKey("RestaurantsDAB.Models.Person", "WaiterID");
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Relationship.GuestDish", b =>
                {
                    b.HasOne("RestaurantsDAB.Models.Dish", "Dish")
                        .WithMany("GuestDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantsDAB.Models.Guest", "Guest")
                        .WithMany("GuestDishes")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Relationship.RestaurantDish", b =>
                {
                    b.HasOne("RestaurantsDAB.Models.Dish", "Dish")
                        .WithMany("RestaurantDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantsDAB.Models.Restaurant", "Restaurant")
                        .WithMany("RestaurantDishes")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Relationship.WaiterTable", b =>
                {
                    b.HasOne("RestaurantsDAB.Models.Table", "Table")
                        .WithMany("WaiterTables")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantsDAB.Models.Waiter", "Waiter")
                        .WithMany("WaiterTables")
                        .HasForeignKey("WaiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Review", b =>
                {
                    b.HasOne("RestaurantsDAB.Models.Restaurant", "Restaurant")
                        .WithMany("Reviews")
                        .HasForeignKey("RestaurantID");
                });

            modelBuilder.Entity("RestaurantsDAB.Models.Table", b =>
                {
                    b.HasOne("RestaurantsDAB.Models.Guest", "Guest")
                        .WithMany("Tables")
                        .HasForeignKey("GuestId");

                    b.HasOne("RestaurantsDAB.Models.Restaurant", "Restaurant")
                        .WithMany("Tables")
                        .HasForeignKey("RestaurantID");
                });
#pragma warning restore 612, 618
        }
    }
}
